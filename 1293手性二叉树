#include<bits/stdc++.h>
using namespace std;
typedef struct Tree{
	int val;
	Tree *left, *right;
}TreeNode;
void build(TreeNode *&T1,TreeNode *&T2){
	int x;
	cin>>x;
	if(x==-1){
		T1=NULL;
		T2=NULL;
		return;
	}
	T1=new TreeNode;
	T2=new TreeNode;
	T1->val=x;
	T2->val=x;
	build(T1->left,T2->left);
	build(T1->right,T2->right);  
}
//主要思路是先交换左右子树，然后对比是否和原二叉树相同
void ex(TreeNode *T){
	if(!T) return;
	ex(T->left);
	ex(T->right);
	swap(T->left,T->right);
}
bool issame(TreeNode *T1,TreeNode *T2){
	if(!T1&&!T2)return true;
	if(T1&&!T2||!T1&&T2||T1->val!=T2->val)return false;
	if(T1->val==T2->val&&issame(T1->left,T2->left)&&issame(T1->right,T2->right))return true;
}

int main(){
	TreeNode *T1;
	TreeNode *T2;
	build(T1,T2);
	ex(T1);
	if(issame(T1,T2))cout<<"yes";
	else cout<<"no";
}
